import subprocess
import sys
import json
from pathlib import Path

def is_package_installed(package_name):
    try:
        if sys.version_info >= (3, 8):
            from importlib.metadata import distribution
            distribution(package_name)
        else:
            import pkg_resources
            pkg_resources.get_distribution(package_name)
        return True
    except:
        return False

def load_packages_from_json(json_path="install_packages.json"):
    try:
        with open(json_path, "r", encoding="utf-8") as f:
            data = json.load(f)
            return data.get("packages", [])
    except FileNotFoundError:
        print(f"‚ö† –§–∞–π–ª {json_path} –Ω–µ –Ω–∞–π–¥–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤.")
        return []
    except json.JSONDecodeError:
        print(f"‚ö† –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –≤ —Ñ–∞–π–ª–µ {json_path}! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        return []

def install_packages():
    packages = load_packages_from_json()
    if not packages:
        print("‚ùå –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ install_packages.json.")
        return

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...")
    for package in packages:
        if is_package_installed(package):
            print(f"‚úÖ –£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {package}")
            continue
        
        try:
            print(f"‚¨á –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package}...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", package])
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {package}")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {package}: {e}")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    install_packages()
    print("üéâ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")